{"version":3,"sources":["Component/ContactForm/ContactForm.module.scss","Component/Filter/Filter.module.scss","Component/ContactListItem/ContactListItem.module.scss","Component/ContactList/ContactList.module.scss","Component/Title/trans.module.css","Component/Title/Phonebook.module.scss","Component/ContactList/Transitions.module.css","Component/Notification/Notification.module.scss","transition.module.scss","Component/Title/Phonebook.js","Component/ContactForm/ContactForm.js","Component/ContactListItem/ContactListItem.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","Component/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Title","CSSTransition","in","appear","classNames","trans","timeout","className","styles","title","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","contactForm","onSubmit","input","type","onChange","required","addBtn","Component","ContactListItem","el","delCont","listItem","btn","onClick","ContactList","contacts","deleteContact","TransitionGroup","component","list","map","contact","key","id","Filter","handleChangeFilter","filter","section","label","Notification","isAlready","setTimeout","notify","App","notification","addContact","find","uuidv4","prevState","event","persist","filteredContact","toLowerCase","includes","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","notifyTransitions","unmountOnExit","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a30030b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1WZ5I\",\"contactFormItem\":\"ContactForm_contactFormItem__3a3Q9\",\"input\":\"ContactForm_input__3tGPY\",\"addBtn\":\"ContactForm_addBtn__1mxvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__3cZ1F\",\"label\":\"Filter_label__1ugsJ\",\"input\":\"Filter_input__1nHAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1RSIY\",\"btn\":\"ContactListItem_btn__2waPp\",\"margin\":\"ContactListItem_margin__3hhmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2TX_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"trans_appear__1gSEh\",\"appearActive\":\"trans_appearActive__1nNty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__3JoUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Transitions_enter__q_Qhk\",\"enterActive\":\"Transitions_enterActive__1jQz9\",\"exit\":\"Transitions_exit__2dfOl\",\"exitActive\":\"Transitions_exitActive__3N3RA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notification_notify__1bMGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transition_appear__177dw\",\"appearActive\":\"transition_appearActive___d4hj\",\"enter\":\"transition_enter__1mwAZ\",\"enterActive\":\"transition_enterActive__1gq7o\",\"exit\":\"transition_exit__fQIlB\",\"exitActive\":\"transition_exitActive__3chTi\"};","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport trans from \"./trans.module.css\";\r\nimport styles from \"./Phonebook.module.scss\";\r\n\r\nconst Title = () => (\r\n  <CSSTransition in={true} appear classNames={trans} timeout={500}>\r\n    <h1 className={styles.title}>Phonebook</h1>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button className={styles.addBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ el, delCont }) => (\r\n  <li className={styles.listItem}>\r\n    {el.name}: {el.number}\r\n    <button className={styles.btn} onClick={delCont}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n  el: PropTypes.object.isRequired,\r\n  delCont: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport trans from \"./Transitions.module.css\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <section>\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {contacts.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={trans}\r\n          className={styles.listItem}\r\n        >\r\n          <ContactListItem\r\n            key={contact.id}\r\n            el={contact}\r\n            delCont={() => deleteContact(contact.id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </section>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nlet Filter = ({ handleChangeFilter, filter }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <br />\r\n        <input\r\n          onChange={handleChangeFilter}\r\n          value={filter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  handleChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Notification.module.scss\";\r\n\r\nconst Notification = ({ isAlready }) => {\r\n  setTimeout(isAlready, 3000);\r\n  return <p className={styles.notify}>Contact already exists!</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Title from \"./Component/Title/Phonebook\";\nimport ContactForm from \"./Component/ContactForm/ContactForm\";\nimport ContactList from \"./Component/ContactList/ContactList\";\nimport Filter from \"./Component/Filter/Filter\";\nimport Notification from \"./Component/Notification/Notification\";\nimport notifyTransitions from \"./transition.module.scss\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    notification: false,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => name === contact.name)) {\n      return this.setState({ notification: true });\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n        notification: false,\n      };\n    });\n  };\n\n  isAlready = () => {\n    this.setState({ notification: false });\n  };\n\n  handleChangeFilter = (event) => {\n    event.persist();\n    this.setState(() => {\n      return { filter: event.target.value };\n    });\n  };\n\n  filteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(() => {\n      return {\n        contacts: this.state.contacts.filter(\n          (contact) => contact.id !== contactId\n        ),\n      };\n    });\n  };\n\n  render() {\n    const { filter, notification, contacts } = this.state;\n\n    return (\n      <div>\n        <Title />\n\n        <CSSTransition\n          in={notification}\n          classNames={notifyTransitions}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification isAlready={this.isAlready} />\n        </CSSTransition>\n\n        <ContactForm onAddContact={this.addContact} />\n\n        {contacts.length > 1 && (\n          <Filter\n            handleChangeFilter={this.handleChangeFilter}\n            filter={filter}\n          />\n        )}\n        <ContactList\n          contacts={this.filteredContact()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}